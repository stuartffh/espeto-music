// Categorias e sugest√µes de m√∫sicas brasileiras

export const categorias = [
  {
    id: 'sertanejo',
    nome: 'ü§† Sertanejo',
    cor: 'bg-amber-500',
  },
  {
    id: 'pagode',
    nome: 'ü•Å Pagode',
    cor: 'bg-yellow-500',
  },
  {
    id: 'funk',
    nome: 'üîä Funk',
    cor: 'bg-pink-500',
  },
  {
    id: 'mpb',
    nome: 'üéµ MPB',
    cor: 'bg-blue-500',
  },
  {
    id: 'rock',
    nome: 'üé∏ Rock BR',
    cor: 'bg-red-500',
  },
  {
    id: 'forro',
    nome: 'ü™ó Forr√≥',
    cor: 'bg-green-500',
  },
  {
    id: 'samba',
    nome: 'üé∫ Samba',
    cor: 'bg-orange-500',
  },
  {
    id: 'gospel',
    nome: 'üôè Gospel',
    cor: 'bg-purple-500',
  },
];

export const sugestoes = {
  sertanejo: [
    'Evid√™ncias - Chit√£ozinho e Xoror√≥',
    'Fico Assim Sem Voc√™ - Adriana Calcanhotto',
    'Faz um Milagre em Mim - Regis Danese',
    'Meu Viol√£o e o Nosso Cachorro - Simone e Simaria',
    'Largado √†s Tra√ßas - Z√© Neto e Cristiano',
    'Jenifer - Gabriel Diniz',
    'Morena - Luan Santana',
    'Vai Malandra - Anitta',
  ],
  pagode: [
    'Deixa a Vida Me Levar - Zeca Pagodinho',
    'Sorriso Maroto - Adivinha o Qu√™',
    'Thiaguinho - Falta Voc√™',
    'P√©ricles - Melhor Eu Ir',
    'Turma do Pagode - Sua Cara',
    'Bom Gosto - Curti√ß√£o',
    'Revela√ß√£o - Deixa Acontecer',
    'Sorriso Maroto - Sinais',
  ],
  funk: [
    'Baile de Favela - MC Jo√£o',
    'Bum Bum Tam Tam - MC Fioti',
    'Vai Malandra - Anitta',
    'Onda Diferente - Anitta',
    'Jenifer - Gabriel Diniz',
    'Dennis DJ - Lindona',
    'MC Kevinho - Olha a Explos√£o',
    'Ludmilla - Cheguei',
  ],
  mpb: [
    'Garota de Ipanema - Tom Jobim',
    'Aquarela - Toquinho',
    'Sozinho - Caetano Veloso',
    'Fotografia - Vinicius de Moraes',
    'Constru√ß√£o - Chico Buarque',
    'Como uma Onda - Lulu Santos',
    'Eduardo e M√¥nica - Legi√£o Urbana',
    'Tempo Perdido - Legi√£o Urbana',
  ],
  rock: [
    'Pais e Filhos - Legi√£o Urbana',
    'Patience - Guns N Roses',
    'Faroeste Caboclo - Legi√£o Urbana',
    'Ainda √© Cedo - Legi√£o Urbana',
    'Qu√≠mica - Legi√£o Urbana',
    'Por Enquanto - C√°ssia Eller',
    'Exagerado - Cazuza',
    'Ideologia - Cazuza',
  ],
  forro: [
    'Xote da Alegria - Falamansa',
    'Morena Tropicana - Alceu Valen√ßa',
    'Asa Branca - Luiz Gonzaga',
    'Isso Aqui T√° Bom Demais - Dominguinhos',
    'Anuncia√ß√£o - Alceu Valen√ßa',
    'Pagode Russo - Luiz Gonzaga',
    'Forr√≥ do HH - Avi√µes do Forr√≥',
    'Bicho de P√© - Calcinha Preta',
  ],
  samba: [
    'Deixa a Vida Me Levar - Zeca Pagodinho',
    'Aquarela Brasileira - Silas de Oliveira',
    'Partido Alto - Martinho da Vila',
    'Canta Canta Minha Gente - Martinho da Vila',
    'O Mundo √© um Moinho - Cartola',
    'Feiti√ßo da Vila - Noel Rosa',
    'Samba do Arnesto - Adoniran Barbosa',
    'Trem das Onze - Adoniran Barbosa',
  ],
  gospel: [
    'Tua Gra√ßa Me Basta - Fernandinho',
    'Porque Ele Vive - Aline Barros',
    'Deus Cuida de Mim - Kleber Lucas',
    'Ainda Existe Uma Cruz - Bruna Karla',
    'Vai Valer a Pena - Aline Barros',
    'Hosana - Gabriela Rocha',
    '√Åguas Purificadoras - Diante do Trono',
    'Sonhos de Deus - Ana Paula Valad√£o',
  ],
};

// Buscar todas as sugest√µes de uma categoria (fallback est√°tico)
export const getSugestoesPorCategoria = (categoriaId) => {
  return sugestoes[categoriaId] || [];
};

// Buscar todas as sugest√µes
export const getTodasSugestoes = () => {
  return Object.values(sugestoes).flat();
};

// Buscar sugest√µes din√¢micas da API
export const getSugestoesDinamicas = async (categoriaId) => {
  try {
    const API_URL = import.meta.env.VITE_API_URL || 'http://localhost:3000';
    const response = await fetch(`${API_URL}/api/sugestoes/${categoriaId}`);
    const data = await response.json();

    // Se API retornar sugest√µes, usar elas; sen√£o usar est√°ticas
    if (data && data.length > 0) {
      return data;
    }
  } catch (error) {
    console.error('Erro ao buscar sugest√µes din√¢micas:', error);
  }

  // Fallback para sugest√µes est√°ticas
  return getSugestoesPorCategoria(categoriaId);
};
