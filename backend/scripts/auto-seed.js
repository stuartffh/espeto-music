#!/usr/bin/env node

/**
 * Script de seed autom√°tico para primeiro deploy
 *
 * Este script:
 * - Verifica se o banco est√° vazio
 * - Executa seed completo apenas se necess√°rio
 * - √â executado automaticamente em postinstall
 *
 * Uso: node auto-seed.js
 */

const { PrismaClient } = require('@prisma/client');
const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');
const prisma = new PrismaClient();

async function autoSeed() {
  try {
    console.log('\nüîç Verificando necessidade de seed autom√°tico...');

    // Verificar se o banco de dados existe (tentar ambos os caminhos)
    const dbPath1 = path.join(__dirname, '..', 'dev.db');
    const dbPath2 = path.join(__dirname, '..', 'prisma', 'dev.db');
    const dbPath3 = path.join(__dirname, '..', 'prisma', 'production.db');

    const dbExists = fs.existsSync(dbPath1) || fs.existsSync(dbPath2) || fs.existsSync(dbPath3);

    if (!dbExists) {
      console.log('üì≠ Banco de dados n√£o existe nos caminhos esperados.');
      console.log('   Tentando verificar tabelas via Prisma...');

      // Tentar verificar se h√° tabelas mesmo sem arquivo vis√≠vel
      try {
        await prisma.$queryRaw`SELECT 1`;
        console.log('‚úÖ Conex√£o com banco estabelecida via Prisma');
      } catch (error) {
        console.log('‚ùå N√£o foi poss√≠vel conectar ao banco. Ser√° criado nas migra√ß√µes.');
        return;
      }
    }

    // Verificar se existem dados no banco
    const [configCount, adminCount] = await Promise.all([
      prisma.configuracoes.count().catch(() => 0),
      prisma.admins.count().catch(() => 0),
    ]);

    const isEmpty = configCount === 0 && adminCount === 0;

    if (isEmpty) {
      console.log('\nüì≠ Banco de dados vazio detectado!');
      console.log('üå± Executando seed autom√°tico...\n');

      // Executar seed completo
      execSync('node seed-all.js', {
        stdio: 'inherit',
        cwd: __dirname
      });

      console.log('\n‚úÖ Seed autom√°tico conclu√≠do!\n');
    } else {
      console.log('‚úÖ Banco j√° possui dados:');
      console.log(`   - Configura√ß√µes: ${configCount}`);
      console.log(`   - Administradores: ${adminCount}`);
      console.log('‚è≠Ô∏è  Pulando seed autom√°tico.\n');
    }

  } catch (error) {
    console.error('‚ö†Ô∏è  Erro ao verificar/executar seed autom√°tico:', error.message);
    console.log('‚ö†Ô∏è  Continuando... Voc√™ pode executar manualmente com: npm run seed:all\n');
    // N√£o falhar o processo - apenas avisar
  } finally {
    await prisma.$disconnect();
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  autoSeed();
}

module.exports = autoSeed;
